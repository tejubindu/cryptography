#include <stdio.h>
#include <string.h>
#include <ctype.h>
void vigenereEncrypt(char *plaintext, char *key, char *ciphertext) 
{
    int plainLen = strlen(plaintext);
    int keyLen = strlen(key);

    for (int i = 0; i < plainLen; i++) 
	{
        if (isalpha(plaintext[i])) 
		{
            char base = isupper(plaintext[i]) ? 'A' : 'a';
            char keyChar = key[i % keyLen];
            char shiftedKey = isupper(keyChar) ? keyChar - 'A' : keyChar - 'a';
            char encryptedChar = (plaintext[i] - base + shiftedKey) % 26 + base;
            ciphertext[i] = encryptedChar;
        } else 
		{
            ciphertext[i] = plaintext[i];
        }
    }
    ciphertext[plainLen] = '\0';
}
void vigenereDecrypt(char *ciphertext, char *key, char *decryptedtext) 
{
    int cipherLen = strlen(ciphertext);
    int keyLen = strlen(key);

    for (int i = 0; i < cipherLen; i++) 
	{
        if (isalpha(ciphertext[i])) 
		{
            char base = isupper(ciphertext[i]) ? 'A' : 'a';
            char keyChar = key[i % keyLen];
            char shiftedKey = isupper(keyChar) ? keyChar - 'A' : keyChar - 'a';
            char decryptedChar = (ciphertext[i] - base - shiftedKey + 26) % 26 + base;
            decryptedtext[i] = decryptedChar;
        } else 
		{
            decryptedtext[i] = ciphertext[i];
        }
    }
    decryptedtext[cipherLen] = '\0';
}

int main() 	
{
    char plaintext[1000];
    char key[100];
    char ciphertext[1000];
    char decryptedtext[1000];

    printf("Enter the plaintext: ");
    gets(plaintext);

    printf("Enter the key: ");
    gets(key);

    vigenereEncrypt(plaintext, key, ciphertext);
    printf("Encrypted text: %s\n", ciphertext);

    vigenereDecrypt(ciphertext, key, decryptedtext);
    printf("Decrypted text: %s\n", decryptedtext);
    return 0;
}
